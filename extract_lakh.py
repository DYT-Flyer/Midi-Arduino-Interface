import numpy as np
import pandas as pd
from sklearn.neural_network import MLPClassifier
from sklearn.svm import SVC
import pretty_midi
import warnings
import os

def get_genres(path):
    """
    This function reads the genre labels and puts it into a pandas DataFrame.
    
    @input path: The path to the genre label file.
    @type path: String
    
    @return: A pandas dataframe containing the genres and midi IDs.
    @rtype: pandas.DataFrame
    """
    ids = []
    genres = []
    with open(path) as f:
        line = f.readline()
        while line:
            if line[0] != '#':
                [x, y, *_] = line.strip().split("\t")
                ids.append(x)
                genres.append(y)
            line = f.readline()
    genre_df = pd.DataFrame(data={"Genre": genres, "TrackID": ids})
    return genre_df

# def get_matched_midi(midi_folder, genre_df):
#     for dir_name, subdir_list, file_list in os.walk(midi_folder):
#         #Original: 36
        
#         if len(dir_name) == 62:
#             track_id = dir_name[44:]
#             files = os.listdir(dir_name)
#             temp = genre_df.loc[genre_df.iloc[:,1]==track_id]
#             if temp.shape[0] > 0:
#                 for file in files:
#                     try:
#                         genre = temp.iloc[0,0]
#                         os.replace(dir_name+'/'+file, "C:/Users/remove/Downloads/dataset/"+genre+"/"+file)
#                     except:
#                         genre = temp.iloc[0,0]
#                         os.mkdir("C:/Users/remove/Downloads/dataset/"+genre)
#                         os.replace(dir_name+'/'+file, "C:/Users/remove/Downloads/dataset/"+genre+"/"+file)
                        


# Get the Genre DataFrame
genre_path = "C:/Users/remove/Downloads/msd_tagtraum_cd1.cls/msd_tagtraum_cd1.cls"
genre_df = get_genres(genre_path)

# # Create Genre List and Dictionary
# label_list = list(set(genre_df.Genre))
# label_dict = {lbl: label_list.index(lbl) for lbl in label_list}

# # Print to Visualize
# print(genre_df.head(), end="\n\n")
# print(label_list, end="\n\n")
# print(label_dict, end="\n\n")

# # Obtain DataFrame with Matched Genres to File Paths
# midi_path = "C:/Users/remove/Downloads/lmd_matched/"
# get_matched_midi(midi_path, genre_df)

def get_matched_midi(midi_folder, genre_df):
    """
    This function loads in midi file paths that are found in the given folder, puts this data into a
    pandas DataFrame, then matches each entry with a genre described in get_genres.
    
    @input midi_folder: The path to the midi files.
    @type midi_folder: String
    @input genre_df: The genre label dataframe generated by get_genres.
    @type genre_df: pandas.DataFrame
    
    @return: A dataframe of track id and path to a midi file with that track id.
    @rtype: pandas.DataFrame
    """
    # Get All Midi Files
    track_ids, file_paths = [], []
    for dir_name, subdir_list, file_list in os.walk(midi_folder):
        dir_name_temp = dir_name[26:]
        if len(dir_name_temp) == 36:
            track_id = dir_name_temp[18:]
            file_path_list = ["/".join([dir_name, file]) for file in file_list]
            for file_path in file_path_list:
                track_ids.append(track_id)
                file_paths.append(file_path)
                
    all_midi_df = pd.DataFrame({"TrackID": track_ids, "Path": file_paths})
    
    # Inner Join with Genre Dataframe
    df = pd.merge(all_midi_df, genre_df, on='TrackID', how='inner')
    return df.drop(["TrackID"], axis=1)

# Obtain DataFrame with Matched Genres to File Paths
midi_path = "C:/Users/remove/Downloads/lmd_matched/"
matched_midi_df = get_matched_midi(midi_path, genre_df)



# Print to Check Correctness
print(matched_midi_df.head())


files = os.listdir('C:\Users\remove\Downloads\adl-piano-midi\adl-piano-midi\Classical')
root = 'C:/Users/remove/Downloads/adl-piano-midi/adl-piano-midi/Soul/'
folders = os.listdir('C:/Users/remove/Downloads/adl-piano-midi/adl-piano-midi/Soul/')
for folder in folders:
    artists = os.listdir(root+folder)
    for artist in artists:
        files = os.listdir(root+folder+'/'+artist)
        for file in files:
            os.replace(root+folder+'/'+artist+'/'+file,'C:/Users/remove/Documents/GitHub/Midi-Arduino-Interface/Dataset/Jazz/'+file)















